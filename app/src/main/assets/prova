Conforme conversamos, queremos conhecer um pouco mais
sobre como é seu processo de desenvolvimento, por isso,
estou te enviando um projeto "desafio" que faz parte do
nosso processo de contratação.
 
DESCRIÇÃO
Somos uma startup do ramo de alimentos e
precisamos de uma aplicativo para nossos clientes
realizarem pedidos, uma vez que já temos uma aplicação web,
 e um servidor (feito às pressas por outro fornecedor).
 Nossa especialidade é a venda de lanches, de modo que
 alguns lanches são opções de cardápio e podem conter ingredientes personalizados.
 
A seguir, apresentamos a lista de ingredientes disponíveis:
 
INGREDIENTE
VALOR
Alface
R$ 0.40
Bacon
R$ 2,00
Hambúrguer de carne
R$ 3,00
Ovo
R$ 0,80
Queijo
R$ 1,50
Pão com gergelim
R$ 1,00
 
Segue as opções de cardápio e seus respectivos ingredientes:
 
LANCHE
INGREDIENTES
X-Bacon
Pão com gergelim, bacon, hambúrguer de carne e queijo
X-Burger
Pão com gergelim, hambúrguer de carne e queijo
X-Egg
Pão com gergelim, ovo, hambúrguer de carne e queijo
X-Egg Bacon
Pão com gergelim, alface, ovo, bacon, hambúrguer de carne e queijo
 
O valor de cada opção do cardápio é dado pela soma dos ingredientes que compõe o lanche. Além destas
opções, o cliente pode personalizar seu lanche e escolher os ingredientes que desejar. Nesse caso, o preço
do lanche também será calculado pela soma dos ingredientes.
 
Existe uma exceção à regra para o cálculo de preço, quando o lanche pertencer à uma promoção. A seguir,
apresentamos a lista de promoções e suas respectivas regras de negócio:
 
PROMOÇÃO
REGRA DE NEGÓCIO
Light
Se o lanche tem alface e não tem bacon, ganha 10% de desconto.
Muita carne
A cada 3 porções de carne o cliente só paga 2. Se o lanche tiver 6 porções, o cliente pagará 4. Assim por diante
Muito queijo
A cada 3 porções de queijo o cliente só paga 2. Se o lanche tiver 6 porções, o cliente pagará 4. Assim por diante
 
REQUISITOS
Para o lançamento do aplicativo (MVP - Minimum Viable Product), deseja-se que ele tenha
Acesso aos dados fornecidos pelo servidor já pronto
Uma tela com a lista dos lanches, com foto, nome, preço e ingredientes
Para obter os lanches
GET http://localhost:8080/api/lanche 
Para obter os ingredientes do lanche, e calcular seu preço: 
GET http://localhost:8080/api/ingrediente/de/<id_lanche> 
Uma tela para escolha do lanche, com foto, nome, preço, ingredientes, descrição, botão para adicionar ao carrinho de compras e botão para customizar (que pode abrir um popup, ou outra tela, e escolhe-se quantos ingredientes a mais quiser, e ao finalizar a customização, volta para a tela anterior, atualizando o preço, ingredientes e nome, adicionando o sufixo “ - do seu jeito “)
Para obter dados de um lanche
GET http://localhost:8080/api/lanche/<id_lanche> 
Para obter todos os ingredientes
GET http://localhost:8080/api/ingrediente
Para adicionar um lanche ao carrinho de compras
PUT http://localhost:8080/api/pedido/<id_lanche>
Para adicionar um lanche personalizado carrinho de compras
PUT  http://localhost:8080/api/pedido/<id_lanche> e, no corpo da requisição, um único parâmetro extras, que é um JsonArray com ids dos ingredientes extras (extras=[1,2,3], por exemplo)
Uma tela com as promoções
Para obter as promoções
http://localhost:8080/api/promocao 
Uma tela de carrinho de compras, onde se lista todos os itens pedidos
Para obter os itens pedidos
http://localhost:8080/api/pedido 
Os cálculos de preço devem levar em conta as promoções. Para o MVP, a regra do texto deve ser implementada no código do aplicativo.
O layout de acordo com sua criatividade, não precisando gastar muito esforço nisso.
Um tratamento para retornos vazios (de pedidos e promoções, por exemplo)
 
CRITÉRIOS DE COMPLETUDE
O projeto deve ser entregue atendendo aos seguintes critérios:
O aplicativo deve ser desenvolvido em Java ou Kotlin;
Deve-se fazer uso de uma das arquiteturas: MVP, MVVM, Viper, Clean, ou Redux
Utilize alguma biblioteca para fazer requisições ao servidor (nodeJs, com os serviços listados anteriormente retornando e recebendo sempre JSON) local disponibilizado (Volley, OkHttp ou Retrofit, por EXEMPLO);
Deve possuir cobertura de testes automatizados para os seguintes pontos: Valor dos lanches de cardápio, regra para cálculo de preço e promoções.
Não é necessário se preocupar com a autenticação dos usuários.
Deve ser responsivo e compatível a diferentes modelos de celulares Android 6
 
ENTREGÁVEIS
Você deve entregar um conjunto de artefatos, de acordo com o nível de complexidade que achar melhor. A seguir, os níveis de complexidade e seus respectivos entregáveis:
 
Fácil
Implementação dos requisitos;
Relatório simples com funcionalidades a mais a serem implementadas no futuro;
Médio
Implementação dos requisitos;
Relatório simples com funcionalidades a mais a serem implementadas no futuro;
Relatório simples de justificativas para escolha do design de código, dependências e melhorias no Servidor para melhor uso de dados no Aplicativo;
Difícil
Implementação dos requisitos;
Relatório simples com funcionalidades a mais a serem implementadas no futuro;
Relatório simples de justificativas para escolha do design de código, dependências e melhorias no Servidor para melhor uso de dados no Aplicativo;
Os testes automatizados devem ser executados por algum modelo de integração contínua;
Implementação de Cache